package com.bistu.intimate.dto;

import java.util.ArrayList;
import java.util.List;

public class MajorDetailPassingScoreExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    public MajorDetailPassingScoreExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPassingScoreIdIsNull() {
            addCriterion("passing_score_id is null");
            return (Criteria) this;
        }

        public Criteria andPassingScoreIdIsNotNull() {
            addCriterion("passing_score_id is not null");
            return (Criteria) this;
        }

        public Criteria andPassingScoreIdEqualTo(Integer value) {
            addCriterion("passing_score_id =", value, "passingScoreId");
            return (Criteria) this;
        }

        public Criteria andPassingScoreIdNotEqualTo(Integer value) {
            addCriterion("passing_score_id <>", value, "passingScoreId");
            return (Criteria) this;
        }

        public Criteria andPassingScoreIdGreaterThan(Integer value) {
            addCriterion("passing_score_id >", value, "passingScoreId");
            return (Criteria) this;
        }

        public Criteria andPassingScoreIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("passing_score_id >=", value, "passingScoreId");
            return (Criteria) this;
        }

        public Criteria andPassingScoreIdLessThan(Integer value) {
            addCriterion("passing_score_id <", value, "passingScoreId");
            return (Criteria) this;
        }

        public Criteria andPassingScoreIdLessThanOrEqualTo(Integer value) {
            addCriterion("passing_score_id <=", value, "passingScoreId");
            return (Criteria) this;
        }

        public Criteria andPassingScoreIdIn(List<Integer> values) {
            addCriterion("passing_score_id in", values, "passingScoreId");
            return (Criteria) this;
        }

        public Criteria andPassingScoreIdNotIn(List<Integer> values) {
            addCriterion("passing_score_id not in", values, "passingScoreId");
            return (Criteria) this;
        }

        public Criteria andPassingScoreIdBetween(Integer value1, Integer value2) {
            addCriterion("passing_score_id between", value1, value2, "passingScoreId");
            return (Criteria) this;
        }

        public Criteria andPassingScoreIdNotBetween(Integer value1, Integer value2) {
            addCriterion("passing_score_id not between", value1, value2, "passingScoreId");
            return (Criteria) this;
        }

        public Criteria andMajorDetialIdIsNull() {
            addCriterion("major_detial_id is null");
            return (Criteria) this;
        }

        public Criteria andMajorDetialIdIsNotNull() {
            addCriterion("major_detial_id is not null");
            return (Criteria) this;
        }

        public Criteria andMajorDetialIdEqualTo(Integer value) {
            addCriterion("major_detial_id =", value, "majorDetialId");
            return (Criteria) this;
        }

        public Criteria andMajorDetialIdNotEqualTo(Integer value) {
            addCriterion("major_detial_id <>", value, "majorDetialId");
            return (Criteria) this;
        }

        public Criteria andMajorDetialIdGreaterThan(Integer value) {
            addCriterion("major_detial_id >", value, "majorDetialId");
            return (Criteria) this;
        }

        public Criteria andMajorDetialIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("major_detial_id >=", value, "majorDetialId");
            return (Criteria) this;
        }

        public Criteria andMajorDetialIdLessThan(Integer value) {
            addCriterion("major_detial_id <", value, "majorDetialId");
            return (Criteria) this;
        }

        public Criteria andMajorDetialIdLessThanOrEqualTo(Integer value) {
            addCriterion("major_detial_id <=", value, "majorDetialId");
            return (Criteria) this;
        }

        public Criteria andMajorDetialIdIn(List<Integer> values) {
            addCriterion("major_detial_id in", values, "majorDetialId");
            return (Criteria) this;
        }

        public Criteria andMajorDetialIdNotIn(List<Integer> values) {
            addCriterion("major_detial_id not in", values, "majorDetialId");
            return (Criteria) this;
        }

        public Criteria andMajorDetialIdBetween(Integer value1, Integer value2) {
            addCriterion("major_detial_id between", value1, value2, "majorDetialId");
            return (Criteria) this;
        }

        public Criteria andMajorDetialIdNotBetween(Integer value1, Integer value2) {
            addCriterion("major_detial_id not between", value1, value2, "majorDetialId");
            return (Criteria) this;
        }

        public Criteria andYearIsNull() {
            addCriterion("year is null");
            return (Criteria) this;
        }

        public Criteria andYearIsNotNull() {
            addCriterion("year is not null");
            return (Criteria) this;
        }

        public Criteria andYearEqualTo(String value) {
            addCriterion("year =", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotEqualTo(String value) {
            addCriterion("year <>", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThan(String value) {
            addCriterion("year >", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearGreaterThanOrEqualTo(String value) {
            addCriterion("year >=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThan(String value) {
            addCriterion("year <", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLessThanOrEqualTo(String value) {
            addCriterion("year <=", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearLike(String value) {
            addCriterion("year like", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotLike(String value) {
            addCriterion("year not like", value, "year");
            return (Criteria) this;
        }

        public Criteria andYearIn(List<String> values) {
            addCriterion("year in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotIn(List<String> values) {
            addCriterion("year not in", values, "year");
            return (Criteria) this;
        }

        public Criteria andYearBetween(String value1, String value2) {
            addCriterion("year between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andYearNotBetween(String value1, String value2) {
            addCriterion("year not between", value1, value2, "year");
            return (Criteria) this;
        }

        public Criteria andTotalPassingScoreIsNull() {
            addCriterion("total_passing_score is null");
            return (Criteria) this;
        }

        public Criteria andTotalPassingScoreIsNotNull() {
            addCriterion("total_passing_score is not null");
            return (Criteria) this;
        }

        public Criteria andTotalPassingScoreEqualTo(Integer value) {
            addCriterion("total_passing_score =", value, "totalPassingScore");
            return (Criteria) this;
        }

        public Criteria andTotalPassingScoreNotEqualTo(Integer value) {
            addCriterion("total_passing_score <>", value, "totalPassingScore");
            return (Criteria) this;
        }

        public Criteria andTotalPassingScoreGreaterThan(Integer value) {
            addCriterion("total_passing_score >", value, "totalPassingScore");
            return (Criteria) this;
        }

        public Criteria andTotalPassingScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_passing_score >=", value, "totalPassingScore");
            return (Criteria) this;
        }

        public Criteria andTotalPassingScoreLessThan(Integer value) {
            addCriterion("total_passing_score <", value, "totalPassingScore");
            return (Criteria) this;
        }

        public Criteria andTotalPassingScoreLessThanOrEqualTo(Integer value) {
            addCriterion("total_passing_score <=", value, "totalPassingScore");
            return (Criteria) this;
        }

        public Criteria andTotalPassingScoreIn(List<Integer> values) {
            addCriterion("total_passing_score in", values, "totalPassingScore");
            return (Criteria) this;
        }

        public Criteria andTotalPassingScoreNotIn(List<Integer> values) {
            addCriterion("total_passing_score not in", values, "totalPassingScore");
            return (Criteria) this;
        }

        public Criteria andTotalPassingScoreBetween(Integer value1, Integer value2) {
            addCriterion("total_passing_score between", value1, value2, "totalPassingScore");
            return (Criteria) this;
        }

        public Criteria andTotalPassingScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("total_passing_score not between", value1, value2, "totalPassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson1PassingScoreIsNull() {
            addCriterion("lesson1_passing_score is null");
            return (Criteria) this;
        }

        public Criteria andLesson1PassingScoreIsNotNull() {
            addCriterion("lesson1_passing_score is not null");
            return (Criteria) this;
        }

        public Criteria andLesson1PassingScoreEqualTo(Integer value) {
            addCriterion("lesson1_passing_score =", value, "lesson1PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson1PassingScoreNotEqualTo(Integer value) {
            addCriterion("lesson1_passing_score <>", value, "lesson1PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson1PassingScoreGreaterThan(Integer value) {
            addCriterion("lesson1_passing_score >", value, "lesson1PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson1PassingScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("lesson1_passing_score >=", value, "lesson1PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson1PassingScoreLessThan(Integer value) {
            addCriterion("lesson1_passing_score <", value, "lesson1PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson1PassingScoreLessThanOrEqualTo(Integer value) {
            addCriterion("lesson1_passing_score <=", value, "lesson1PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson1PassingScoreIn(List<Integer> values) {
            addCriterion("lesson1_passing_score in", values, "lesson1PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson1PassingScoreNotIn(List<Integer> values) {
            addCriterion("lesson1_passing_score not in", values, "lesson1PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson1PassingScoreBetween(Integer value1, Integer value2) {
            addCriterion("lesson1_passing_score between", value1, value2, "lesson1PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson1PassingScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("lesson1_passing_score not between", value1, value2, "lesson1PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson2PassingScoreIsNull() {
            addCriterion("lesson2_passing_score is null");
            return (Criteria) this;
        }

        public Criteria andLesson2PassingScoreIsNotNull() {
            addCriterion("lesson2_passing_score is not null");
            return (Criteria) this;
        }

        public Criteria andLesson2PassingScoreEqualTo(Integer value) {
            addCriterion("lesson2_passing_score =", value, "lesson2PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson2PassingScoreNotEqualTo(Integer value) {
            addCriterion("lesson2_passing_score <>", value, "lesson2PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson2PassingScoreGreaterThan(Integer value) {
            addCriterion("lesson2_passing_score >", value, "lesson2PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson2PassingScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("lesson2_passing_score >=", value, "lesson2PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson2PassingScoreLessThan(Integer value) {
            addCriterion("lesson2_passing_score <", value, "lesson2PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson2PassingScoreLessThanOrEqualTo(Integer value) {
            addCriterion("lesson2_passing_score <=", value, "lesson2PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson2PassingScoreIn(List<Integer> values) {
            addCriterion("lesson2_passing_score in", values, "lesson2PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson2PassingScoreNotIn(List<Integer> values) {
            addCriterion("lesson2_passing_score not in", values, "lesson2PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson2PassingScoreBetween(Integer value1, Integer value2) {
            addCriterion("lesson2_passing_score between", value1, value2, "lesson2PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson2PassingScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("lesson2_passing_score not between", value1, value2, "lesson2PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson3PassingScoreIsNull() {
            addCriterion("lesson3_passing_score is null");
            return (Criteria) this;
        }

        public Criteria andLesson3PassingScoreIsNotNull() {
            addCriterion("lesson3_passing_score is not null");
            return (Criteria) this;
        }

        public Criteria andLesson3PassingScoreEqualTo(Integer value) {
            addCriterion("lesson3_passing_score =", value, "lesson3PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson3PassingScoreNotEqualTo(Integer value) {
            addCriterion("lesson3_passing_score <>", value, "lesson3PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson3PassingScoreGreaterThan(Integer value) {
            addCriterion("lesson3_passing_score >", value, "lesson3PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson3PassingScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("lesson3_passing_score >=", value, "lesson3PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson3PassingScoreLessThan(Integer value) {
            addCriterion("lesson3_passing_score <", value, "lesson3PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson3PassingScoreLessThanOrEqualTo(Integer value) {
            addCriterion("lesson3_passing_score <=", value, "lesson3PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson3PassingScoreIn(List<Integer> values) {
            addCriterion("lesson3_passing_score in", values, "lesson3PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson3PassingScoreNotIn(List<Integer> values) {
            addCriterion("lesson3_passing_score not in", values, "lesson3PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson3PassingScoreBetween(Integer value1, Integer value2) {
            addCriterion("lesson3_passing_score between", value1, value2, "lesson3PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson3PassingScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("lesson3_passing_score not between", value1, value2, "lesson3PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson4PassingScoreIsNull() {
            addCriterion("lesson4_passing_score is null");
            return (Criteria) this;
        }

        public Criteria andLesson4PassingScoreIsNotNull() {
            addCriterion("lesson4_passing_score is not null");
            return (Criteria) this;
        }

        public Criteria andLesson4PassingScoreEqualTo(Integer value) {
            addCriterion("lesson4_passing_score =", value, "lesson4PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson4PassingScoreNotEqualTo(Integer value) {
            addCriterion("lesson4_passing_score <>", value, "lesson4PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson4PassingScoreGreaterThan(Integer value) {
            addCriterion("lesson4_passing_score >", value, "lesson4PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson4PassingScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("lesson4_passing_score >=", value, "lesson4PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson4PassingScoreLessThan(Integer value) {
            addCriterion("lesson4_passing_score <", value, "lesson4PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson4PassingScoreLessThanOrEqualTo(Integer value) {
            addCriterion("lesson4_passing_score <=", value, "lesson4PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson4PassingScoreIn(List<Integer> values) {
            addCriterion("lesson4_passing_score in", values, "lesson4PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson4PassingScoreNotIn(List<Integer> values) {
            addCriterion("lesson4_passing_score not in", values, "lesson4PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson4PassingScoreBetween(Integer value1, Integer value2) {
            addCriterion("lesson4_passing_score between", value1, value2, "lesson4PassingScore");
            return (Criteria) this;
        }

        public Criteria andLesson4PassingScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("lesson4_passing_score not between", value1, value2, "lesson4PassingScore");
            return (Criteria) this;
        }

        public Criteria andYnIsNull() {
            addCriterion("yn is null");
            return (Criteria) this;
        }

        public Criteria andYnIsNotNull() {
            addCriterion("yn is not null");
            return (Criteria) this;
        }

        public Criteria andYnEqualTo(Byte value) {
            addCriterion("yn =", value, "yn");
            return (Criteria) this;
        }

        public Criteria andYnNotEqualTo(Byte value) {
            addCriterion("yn <>", value, "yn");
            return (Criteria) this;
        }

        public Criteria andYnGreaterThan(Byte value) {
            addCriterion("yn >", value, "yn");
            return (Criteria) this;
        }

        public Criteria andYnGreaterThanOrEqualTo(Byte value) {
            addCriterion("yn >=", value, "yn");
            return (Criteria) this;
        }

        public Criteria andYnLessThan(Byte value) {
            addCriterion("yn <", value, "yn");
            return (Criteria) this;
        }

        public Criteria andYnLessThanOrEqualTo(Byte value) {
            addCriterion("yn <=", value, "yn");
            return (Criteria) this;
        }

        public Criteria andYnIn(List<Byte> values) {
            addCriterion("yn in", values, "yn");
            return (Criteria) this;
        }

        public Criteria andYnNotIn(List<Byte> values) {
            addCriterion("yn not in", values, "yn");
            return (Criteria) this;
        }

        public Criteria andYnBetween(Byte value1, Byte value2) {
            addCriterion("yn between", value1, value2, "yn");
            return (Criteria) this;
        }

        public Criteria andYnNotBetween(Byte value1, Byte value2) {
            addCriterion("yn not between", value1, value2, "yn");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated do_not_delete_during_merge Thu Apr 07 21:54:18 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table major_detail_passing_score
     *
     * @mbggenerated Thu Apr 07 21:54:18 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}